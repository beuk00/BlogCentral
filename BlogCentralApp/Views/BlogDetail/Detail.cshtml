@model DetailIndexViewModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<h1>@Model.blogPost.Title</h1>
@*<a asp-controller="" asp-action="" asp-route-id="@Model.blogPost.AuthorId">@Model.blogPost.Author.UserName</a>*@


<h5>@Model.blogPost.Date</h5>

<p style="border:solid">@Model.blogPost.Content</p>
<br />

@if (Model.hasLiked)
{
    <a asp-controller="BlogDetail" asp-action="Unlike" asp-route-id="@Model.blogPost.Id" class="btn btn-danger"> Unlike</a>
}
else
{
    <a asp-controller="BlogDetail" asp-action="Like" asp-route-id="@Model.blogPost.Id" class="btn btn-info"> Like</a>

}
<p class="badge badge-secondary">@Model.blogPost.Likes </p>
<br />
@foreach (var comment in Model.blogPost.Comments)
{
    <div style="border:solid">
    
        <p>@comment.Content</p>
        @if (UserManager.GetUserId(User) == comment.AuthorId)
        {
            
            <a asp-controller="Comment" asp-action="CreateEditComment" asp-route-blogPostId="@Model.blogPost.Id" asp-route-commentId="@comment.Id" style="float:left">Edit comment</a>
        }
        @if (UserManager.GetUserId(User) == Model.blogPost.AuthorId || UserManager.GetUserId(User) == comment.AuthorId)
        {
            <a asp-controller="Comment" asp-action="DeleteComment" asp-route-id="@comment.Id">Delete comment</a>
        }
    </div>
}


<br />
@if (User.Identity.IsAuthenticated)
{
    <a asp-controller="Comment" asp-action="CreateEditComment" asp-route-blogPostId="@Model.blogPost.Id" asp-route-commentId="0">Create Comment</a>

}
else
{
    <div>Login to comment</div>
}
@if (UserManager.GetUserId(User) == Model.blogPost.AuthorId)
{
    <a asp-controller="" asp-action="" asp-route-id="">Delete post</a>
    <a asp-controller="" asp-action="" asp-route-id="" style="float:left">Edit post</a>
}